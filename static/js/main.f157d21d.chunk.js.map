{"version":3,"sources":["store/api/index.js","store/api/findLocationByLatLng.js","store/api/findWeatherById.js","store/api/findDrone.js","store/actions.js","store/sagas/Weather.js","store/sagas/ApiErrors.js","store/sagas/Drone.js","store/sagas/index.js","store/reducers/Weather.js","store/reducers/Drone.js","components/Weather.js","components/Header.js","components/Wrapper.js","components/Chart.js","components/Map.js","components/Dashboard.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["api","findLocationByLatLng","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","latitude","longitude","latlon","response","json","wrap","_context","prev","next","join","fetch","concat","sent","ok","abrupt","error","code","status","data","stop","this","_x","_x2","apply","arguments","findWeatherbyId","id","findDrone","FETCH_WEATHER","API_ERROR","WEATHER_DATA_RECEIVED","WEATHER_ID_RECEIVED","FETCH_DRONE","REFETCH_DRONE","DRONE_DATA_RECEIVED","watchWeatherIdReceived","watchFetchWeather","watchAppLoad","action","call","API","put","type","actions","cancel","_marked","_ref2","location","_context2","woeid","_marked2","_context3","all","takeEvery","_marked3","sagas_Weather","apiErrorReceived","watchApiError","toast","ApiErrors_marked","ApiErrors_marked2","ApiErrors","watchFetchDrone","watchAppLoadDrone","console","log","Drone_marked","Drone_marked2","Drone","sagas","toConsumableArray","WeatherSagas","DroneSagas","initialState","loading","weatherId","name","temperature","weather_state_name","handlers","_handlers","defineProperty","state","objectSpread","c","weather","consolidated_weather","the_temp","latt_long","title","_latt_long$split","split","_latt_long$split2","slicedToArray","temperatureinCelsius","temperatureinFahrenheit","reducers_Weather","length","undefined","handler","timestamp","metric","uom","accuracy","droneDataReceived","Drone_handlers","reducers_Drone","Chip","withStyles","theme","root","background","palette","secondary","main","label","color","primary","ChipRaw","Weather","props","onLoad","_this$props","react_default","createElement","LinearProgress_default","Weather_Chip","Component","connect","ownProps","_state$weather","dispatch","grow","flexGrow","classes","AppBar_default","position","Toolbar_default","Typography_default","variant","className","components_Weather","wrapper","height","children","Chart","plotData","trace","x","map","point","moment","format","y","mode","connectgaps","Fragment","react_plotly_default","layout","xaxis","yaxis","autosize","style","width","useResizeHandler","Map","withScriptjs","withGoogleMap","react_google_maps_lib","defaultZoom","defaultCenter","lat","lng","isMarkerShown","mapData","CardHeader","CardHeaderRaw","Dashboard","_this","timer","setInterval","onRefetch","clearInterval","Card_default","card","Dashboard_CardHeader","CardContent_default","components_Map","googleMapURL","process","loadingElement","containerElement","mapElement","components_Chart","_state$drone","drone","margin","store","rootReducer","combineReducers","weatherReducer","droneReducer","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","createStore","forEach","run","createMuiTheme","typography","useNextVariants","App","styles","CssBaseline_default","react_redux_es","components_Wrapper","components_Header","components_Dashboard","lib","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6OAKeA,UAAA,CACbC,qBCJyB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAUC,GAAjB,IAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtBN,EAAS,CAACF,EAAUC,GAAWQ,KAAK,KADdH,EAAAE,KAAA,EAGLE,MAAK,oFAAAC,OAC0DT,IAJ1D,WAGtBC,EAHsBG,EAAAM,MAMdC,GANc,CAAAP,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,SAOnB,CAAEC,MAAO,CAAEC,KAAMb,EAASc,UAPP,cAAAX,EAAAE,KAAA,EASTL,EAASC,OATA,cAStBA,EATsBE,EAAAM,KAAAN,EAAAQ,OAAA,SAUrB,CAAEI,KAAMd,IAVa,yBAAAE,EAAAa,SAAApB,EAAAqB,SAAH,gBAAAC,EAAAC,GAAA,OAAA7B,EAAA8B,MAAAH,KAAAI,YAAA,GDKzBC,gBELmB,eAAAhC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAM2B,GAAN,IAAAvB,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAECE,MAAK,mEAAAC,OACyCe,EADzC,MAFN,WAEhBvB,EAFgBG,EAAAM,MAKRC,GALQ,CAAAP,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,SAMb,CAAEC,MAAO,CAAEC,KAAMb,EAASc,UANb,cAAAX,EAAAE,KAAA,EAQHL,EAASC,OARN,cAQhBA,EARgBE,EAAAM,KAAAN,EAAAQ,OAAA,SASf,CAAEI,KAAMd,IATO,wBAAAE,EAAAa,SAAApB,EAAAqB,SAAH,gBAAAC,GAAA,OAAA5B,EAAA8B,MAAAH,KAAAI,YAAA,GFMnBG,UGJa,eAAAlC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAI,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOE,MAAK,wDADZ,WACVP,EADUG,EAAAM,MAIFC,GAJE,CAAAP,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,SAKP,CAAEC,MAAO,CAAEC,KAAMb,EAASc,UALnB,cAAAX,EAAAE,KAAA,EAOGL,EAASC,OAPZ,cAOVA,EAPUE,EAAAM,KAAAN,EAAAQ,OAAA,SASTV,EAAKc,MATI,wBAAAZ,EAAAa,SAAApB,EAAAqB,SAAH,yBAAA3B,EAAA8B,MAAAH,KAAAI,YAAA,KCJFI,EAAgB,oCAChBC,EAAY,2BACZC,EAAwB,8BACxBC,EAAsB,4BAEtBC,EAAc,2BACdC,EAAgB,6BAChBC,EAAsB,uCCYzBC,cAWAC,cAsBAC,GAjCV,SAAUF,EAAuBG,GAAjC,IAAAZ,EAAAjC,EAAAsB,EAAAG,EAAA,OAAAtB,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE0B,OADhBkB,EAAOY,EAAPZ,GADVpB,EAAAE,KAAA,EAEgC+B,YAAKC,EAAIf,gBAAiBC,GAF1D,UAAAjC,EAAAa,EAAAM,KAEUG,EAFVtB,EAEUsB,MAAOG,EAFjBzB,EAEiByB,MACXH,EAHN,CAAAT,EAAAE,KAAA,SAII,OAJJF,EAAAE,KAAA,EAIUiC,YAAI,CAAEC,KAAMC,EAAmB3B,KAAMD,EAAMC,OAJrD,OAKI,OALJV,EAAAE,KAAA,GAKUoC,cALV,eAAAtC,EAAAQ,OAAA,kBAQE,OARFR,EAAAE,KAAA,GAQQiC,YAAI,CAAEC,KAAMC,EAA+BzB,SARnD,yBAAAZ,EAAAa,SAAA0B,EAAAzB,MAWA,SAAUgB,EAAkBE,GAA5B,IAAAtC,EAAAC,EAAA6C,EAAA/B,EAAAG,EAAA6B,EAAA,OAAAnD,EAAAC,EAAAQ,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAE0B,OADhBR,EAAwBsC,EAAxBtC,SAAUC,EAAcqC,EAAdrC,UADpB+C,EAAAxC,KAAA,EAEgC+B,YAC5BC,EAAIhD,qBACJQ,EACAC,GALJ,UAAA6C,EAAAE,EAAApC,KAEUG,EAFV+B,EAEU/B,MAAOG,EAFjB4B,EAEiB5B,MAMXH,EARN,CAAAiC,EAAAxC,KAAA,SASI,OATJwC,EAAAxC,KAAA,EASUiC,YAAI,CAAEC,KAAMC,EAAmB3B,KAAMD,EAAMC,OATrD,OAUI,OAVJgC,EAAAxC,KAAA,GAUUoC,cAVV,eAAAI,EAAAlC,OAAA,qBAaQiC,IAAW7B,EAAK,IAAKA,EAAK,GAAG+B,MAbrC,CAAAD,EAAAxC,KAAA,SAeI,OAfJwC,EAAAxC,KAAA,GAeUiC,YAAI,CAAEC,KAAMC,IAftB,QAgBI,OAhBJK,EAAAxC,KAAA,GAgBUoC,cAhBV,eAAAI,EAAAlC,OAAA,kBAmBE,OAnBFkC,EAAAxC,KAAA,GAmBQiC,YAAI,CAAEC,KAAMC,EAA6BjB,GAAIqB,IAnBrD,yBAAAC,EAAA7B,SAAA+B,EAAA9B,MAsBA,SAAUiB,IAAV,OAAAzC,EAAAC,EAAAQ,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OACE,OADF2C,EAAA3C,KAAA,EACQ4C,YAAI,CACRC,YAAUV,EAAuBP,GACjCiB,YAAUV,EAA6BR,KAH3C,wBAAAgB,EAAAhC,SAAAmC,EAAAlC,MAOe,IAAAmC,EAAA,CAAClB,sBCvDNmB,cAIAC,GAJV,SAAUD,EAAiBlB,GAA3B,OAAA1C,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OADFF,EAAAE,KAAA,EACQ+B,YAAKmB,QAAM3C,MAAP,mBAAAJ,OAAiC2B,EAAOtB,OADpD,wBAAAV,EAAAa,SAAAwC,EAAAvC,MAIA,SAAUqC,IAAV,OAAA7D,EAAAC,EAAAQ,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OACE,OADFwC,EAAAxC,KAAA,EACQ6C,YAAUV,EAAmBa,GADrC,wBAAAR,EAAA7B,SAAAyC,EAAAxC,MAIe,IAAAyC,EAAA,CAACJ,cCRNK,cAmBAC,GAnBV,SAAUD,EAAgBxB,GAA1B,IAAApB,EAAAzB,EAAAsB,EAAA,OAAAnB,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACe,OADfF,EAAAE,KAAA,EACqB+B,YAAKC,EAAIb,WAD9B,OAEoB,OADZT,EADRZ,EAAAM,KAAAN,EAAAE,KAAA,EAE0B+B,YAAKC,EAAIb,WAFnC,UAAAlC,EAAAa,EAAAM,OAEUG,EAFVtB,EAEUsB,OAFV,CAAAT,EAAAE,KAAA,SAKI,OADAwD,QAAQC,IAAIlD,GAJhBT,EAAAE,KAAA,GAKUiC,YAAI,CAAEC,KAAMC,EAAmB3B,KAAMD,EAAMC,OALrD,QAMI,OANJV,EAAAE,KAAA,GAMUoC,cANV,eAAAtC,EAAAQ,OAAA,qBAUOI,EAVP,CAAAZ,EAAAE,KAAA,SAWI,OAXJF,EAAAE,KAAA,GAWUiC,YAAI,CAAEC,KAAMC,IAXtB,QAYI,OAZJrC,EAAAE,KAAA,GAYUoC,cAZV,eAAAtC,EAAAQ,OAAA,kBAgBE,OAhBFR,EAAAE,KAAA,GAgBQiC,YAAI,CAAEC,KAAMC,EAA6BzB,SAhBjD,yBAAAZ,EAAAa,SAAA+C,EAAA9C,MAmBA,SAAU2C,IAAV,OAAAnE,EAAAC,EAAAQ,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OACE,OADFwC,EAAAxC,KAAA,EACQ4C,YAAI,CACRC,YAAUV,EAAqBmB,GAC/BT,YAAUV,EAAuBmB,KAHrC,wBAAAd,EAAA7B,SAAAgD,EAAA/C,MAOe,QAAAgD,EAAA,CAACL,GCzBDM,EAAA3E,OAAA4E,EAAA,EAAA5E,CAAImE,GAAnBlD,OAAAjB,OAAA4E,EAAA,EAAA5E,CAAiC6E,GAAjC7E,OAAA4E,EAAA,EAAA5E,CAAkD8E,6BCH5CC,EAAe,CACnBC,SAAS,EACTC,UAAW,KACXC,KAAM,GACNC,YAAa,GACbC,mBAAoB,GACpB9E,SAAU,KACVC,UAAW,KACXiB,KAAM,IAkCF6D,GAAQC,EAAA,GAAAtF,OAAAuF,EAAA,EAAAvF,CAAAsF,EACXrC,EA9BkB,SAACuC,EAAO5C,GAC3B,OAAO5C,OAAAyF,EAAA,EAAAzF,CAAA,GAAKwF,EAAZ,CAAmBR,SAAS,MA4BhBhF,OAAAuF,EAAA,EAAAvF,CAAAsF,EAEXrC,EA3BuB,SAACuC,EAAO5C,GAChC,OAAO5C,OAAAyF,EAAA,EAAAzF,CAAA,GAAKwF,EAAZ,CAAmBP,UAAWrC,EAAOZ,OAwBzBhC,OAAAuF,EAAA,EAAAvF,CAAAsF,EAGXrC,EAxByB,SAACuC,EAAO5C,GAAW,IACrCpB,EAASoB,EAATpB,KACR,IAAKA,EAAI,qBAA0B,OAAOgE,EAC1C,IAbUE,EAaJC,EAAUnE,EAAKoE,qBAAqB,GAClCR,EAAiCO,EAAjCP,mBAAoBS,EAAaF,EAAbE,SACpBC,EAA2BtE,EAA3BsE,UAAkBZ,EAAS1D,EAAhBuE,MAL0BC,EAMfF,EAAUG,MAAM,KANDC,EAAAlG,OAAAmG,EAAA,EAAAnG,CAAAgG,EAAA,GAMtC1F,EANsC4F,EAAA,GAM5B3F,EAN4B2F,EAAA,GAQ7C,OAAOlG,OAAAyF,EAAA,EAAAzF,CAAA,GACFwF,EADL,CAEER,SAAS,EACT1E,WACAC,YACA6F,qBAAsBP,EACtBQ,yBAxBQX,EAwBqBG,EAxBX,EAAJH,EAAS,EAAI,IAyB3BN,qBACAF,OACA1D,KAAMoB,EAAOpB,SAIH8D,GAMCgB,EAAA,WAAkC,IAAjCd,EAAiC1D,UAAAyE,OAAA,QAAAC,IAAA1E,UAAA,GAAAA,UAAA,GAAzBiD,EAAcnC,EAAWd,UAAAyE,OAAA,EAAAzE,UAAA,QAAA0E,EACzCC,EAAUpB,EAASzC,EAAOI,MAChC,MAAuB,qBAAZyD,EAAgCjB,EACpCiB,EAAQjB,EAAO5C,ICnDlBmC,EAAe,CACnBC,SAAS,EACTxD,KAAM,CACJ,CACEkF,UAAW,KACXC,OAAQ,KACRrG,SAAU,KACVC,UAAW,KACXqG,IAAK,GACLC,SAAU,QAYVC,EAAoB,SAACtB,EAAO5C,GAAW,IACnCpB,EAASoB,EAATpB,KACR,OAAKA,EAEExB,OAAAyF,EAAA,EAAAzF,CAAA,GACFwF,EADL,CAEEhE,KAAKxB,OAAA4E,EAAA,EAAA5E,CAAKwB,GACVwD,SAAS,IALOQ,GASdH,GAAQ0B,EAAA,GAAA/G,OAAAuF,EAAA,EAAAvF,CAAA+G,EACX9D,EAnBkB,SAACuC,EAAO5C,GAC3B,OAAO5C,OAAAyF,EAAA,EAAAzF,CAAA,GACFwF,EADL,CAEER,SAAS,MAeChF,OAAAuF,EAAA,EAAAvF,CAAA+G,EAEX9D,EAAwB6D,GAFb9G,OAAAuF,EAAA,EAAAvF,CAAA+G,EAGX9D,EAA8B6D,GAHnBC,GAMCC,EAAA,WAAkC,IAAjCxB,EAAiC1D,UAAAyE,OAAA,QAAAC,IAAA1E,UAAA,GAAAA,UAAA,GAAzBiD,EAAcnC,EAAWd,UAAAyE,OAAA,EAAAzE,UAAA,QAAA0E,EACzCC,EAAUpB,EAASzC,EAAOI,MAChC,MAAuB,qBAAZyD,EAAgCjB,EACpCiB,EAAQjB,EAAO5C,6MC5BlBqE,GAAOC,sBARM,SAAAC,GAAK,MAAK,CAC3BC,KAAM,CACJC,WAAYF,EAAMG,QAAQC,UAAUC,MAEtCC,MAAO,CACLC,MAAOP,EAAMG,QAAQK,QAAQH,QAGpBN,CAAuBU,MAE9BC,oMAEFnG,KAAKoG,MAAMC,0CAEJ,IAAAC,EAMHtG,KAAKoG,MAJP9C,EAFKgD,EAELhD,QACAE,EAHK8C,EAGL9C,KACAE,EAJK4C,EAIL5C,mBACAiB,EALK2B,EAKL3B,wBAEF,OAAIrB,EAAgBiD,EAAA9H,EAAA+H,cAACC,GAAAhI,EAAD,MAElB8H,EAAA9H,EAAA+H,cAACE,GAAD,CACEX,MAAK,cAAAxG,OAAgBiE,EAAhB,MAAAjE,OAAyBmE,EAAzB,SAAAnE,OAAmDoF,EAAnD,iBAdSgC,aA4CPC,gBAxBE,SAAC9C,EAAO+C,GAAa,IAAAC,EAMhChD,EAAMG,QACV,MAAO,CACLX,QARkCwD,EAElCxD,QAOAE,KATkCsD,EAGlCtD,KAOAE,mBAVkCoD,EAIlCpD,mBAOAiB,wBAXkCmC,EAKlCnC,0BAUgB,SAAAoC,GAAQ,MAAK,CAC/BV,OAAQ,kBACNU,EAAS,CACPzF,KAAMC,EACN1C,WAAY,QACZD,SAAU,aAIDgI,CAGbT,ICnCaX,yBAtBA,CACbwB,KAAM,CACJC,SAAU,IAoBCzB,CAhBA,SAAAY,GAAS,IACdc,EAAYd,EAAZc,QAGR,OACEX,EAAA9H,EAAA+H,cAACW,GAAA1I,EAAD,CAAQ2I,SAAS,UACfb,EAAA9H,EAAA+H,cAACa,GAAA5I,EAAD,KACE8H,EAAA9H,EAAA+H,cAACc,GAAA7I,EAAD,CAAY8I,QAAQ,KAAKvB,MAAM,UAAUwB,UAAWN,EAAQF,MAJrD,UAIP,uCAGAT,EAAA9H,EAAA+H,cAACiB,GAAD,UCROjC,yBAZA,SAAAC,GAAK,MAAK,CACvBiC,QAAS,CACP/B,WAAYF,EAAMG,QAAQD,WAAWG,KACrC6B,OAAQ,WASGnC,CALC,SAAAY,GAAS,IACfc,EAAYd,EAAZc,QACR,OAAOX,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAWN,EAAQQ,SAAUtB,EAAMwB,qHCgClCC,GAvCD,SAAAzB,GAAS,IACb0B,EAAa1B,EAAb0B,SAQFC,EAAQ,CACZC,EAPYF,EAASG,IAAI,SAAAC,GACzB,OAAOC,KAAOD,EAAMlD,WAAWoD,OAAO,cAOtCC,EALYP,EAASG,IAAI,SAAAC,GACzB,OAAOA,EAAMjD,SAKbqD,KAAM,QACNC,aAAa,GAcf,OACEhC,EAAA9H,EAAA+H,cAACD,EAAA9H,EAAM+J,SAAP,KACEjC,EAAA9H,EAAA+H,cAACiC,GAAAhK,EAAD,CACEqB,KAAM,CAACiI,GACPW,OAfS,CACbrE,MAAO,oBACPsE,MAAO,CACLtE,MAAO,QAETuE,MAAO,CACLvE,MAAO,mBAETwE,UAAU,GAQNC,MAAO,CAAEC,MAAO,OAAQpB,OAAQ,QAChCqB,kBAAkB,eCTXC,GApBHC,wBACVC,yBAAc,SAAA/C,GACZ,OACEG,EAAA9H,EAAA+H,cAAC4C,GAAA,UAAD,CACEC,YAAa,EACbC,cAAe,CAAEC,IAAK,QAASC,KAAM,UAEpCpD,EAAMqD,eACLlD,EAAA9H,EAAA+H,cAAC4C,GAAA,OAAD,CACEhC,SAAU,CACRmC,IAAKnD,EAAMsD,QAAQ,GAAG9K,SACtB4K,IAAKpD,EAAMsD,QAAQ,GAAG7K,iBCG9B8K,GAAanE,sBARA,SAAAC,GAAK,MAAK,CAC3BC,KAAM,CACJC,WAAYF,EAAMG,QAAQK,QAAQH,MAEpCzB,MAAO,CACL2B,MAAO,WAGQR,CAAuBoE,MAOpCC,oMAIgB,IAAAC,EAAA9J,KAClBA,KAAKoG,MAAMC,SACXrG,KAAK+J,MAAQC,YAAY,kBAAMF,EAAK1D,MAAM6D,aAAa,oDAKvDC,cAAclK,KAAK+J,wCAGZ,IAAAzD,EAC4BtG,KAAKoG,MAAhC9C,EADDgD,EACChD,QAASxD,EADVwG,EACUxG,KAAMoH,EADhBZ,EACgBY,QAEvB,OAAI5D,EAAgBiD,EAAA9H,EAAA+H,cAACC,GAAAhI,EAAD,MAIlB8H,EAAA9H,EAAA+H,cAACD,EAAA9H,EAAM+J,SAAP,KACEjC,EAAA9H,EAAA+H,cAAC2D,GAAA1L,EAAD,CAAM+I,UAAWN,EAAQkD,MACvB7D,EAAA9H,EAAA+H,cAAC6D,GAAD,CAAYhG,MAAM,uBAClBkC,EAAA9H,EAAA+H,cAAC8D,GAAA7L,EAAD,KACE8H,EAAA9H,EAAA+H,cAAC+D,GAAD,CACEd,eAAa,EACbe,aAAY,+CAAAjL,OACVkL,0CADU,8CAGZC,eAAgBnE,EAAA9H,EAAA+H,cAAA,OAAKsC,MAAO,CAAEnB,OAAM,UACpCgD,iBAAkBpE,EAAA9H,EAAA+H,cAAA,OAAKsC,MAAO,CAAEnB,OAAM,WACtCiD,WAAYrE,EAAA9H,EAAA+H,cAAA,OAAKsC,MAAO,CAAEnB,OAAM,UAChC+B,QAAS5J,MAIfyG,EAAA9H,EAAA+H,cAAC2D,GAAA1L,EAAD,CAAM+I,UAAWN,EAAQkD,MACvB7D,EAAA9H,EAAA+H,cAAC6D,GAAD,CAAYhG,MAAM,qCAClBkC,EAAA9H,EAAA+H,cAAC8D,GAAA7L,EAAD,KACE8H,EAAA9H,EAAA+H,cAACqE,GAAD,CAAO/C,SAAUhI,cAxCL6G,aAmETC,gBAnBE,SAAA9C,GAAS,IAAAgH,EACEhH,EAAMiH,MAAxBzH,EADgBwH,EAChBxH,QAASxD,EADOgL,EACPhL,KACjB,MAAO,CACLwD,UACAxD,KAAKxB,OAAA4E,EAAA,EAAA5E,CAAKwB,KAIM,SAAAiH,GAAQ,MAAK,CAC/BV,OAAQ,kBACNU,EAAS,CACPzF,KAAMC,KAEV0I,UAAW,kBACTlD,EAAS,CACPzF,KAAMC,OAIGqF,CAGbpB,sBA5Ea,CACb4E,KAAM,CACJY,OAAQ,aA0EVxF,CAAmBqE,KCxFfoB,GCJS,WACb,IAAMC,EAAcC,0BAAgB,CAClClH,QAASmH,EACTL,MAAOM,IAGHC,EAAmBC,8BAAoB,IACvCC,EAAiBC,cACjBC,EAAcC,0BAAgBH,GAC9BP,EAAQW,sBAAYV,EAAaI,EAAiBI,IAIxD,OAFAzI,EAAM4I,QAAQL,EAAeM,KAEtBb,EDTKW,GACRnG,GAAQsG,0BAAe,CAC3BC,WAAY,CACVC,iBAAiB,GAEnBrG,QAAS,CACPK,QAAS,CACPH,KAAM,iBAERD,UAAW,CACTC,KAAM,oBAERH,WAAY,CACVG,KAAM,uBAkBGoG,GAbH,SAAA9F,GAAK,OACfG,EAAA9H,EAAA+H,cAAC2F,GAAA,iBAAD,CAAkB1G,MAAOA,IACvBc,EAAA9H,EAAA+H,cAAC4F,GAAA3N,EAAD,MACA8H,EAAA9H,EAAA+H,cAAC6F,GAAA,EAAD,CAAUpB,MAAOA,IACf1E,EAAA9H,EAAA+H,cAAC8F,GAAD,KACE/F,EAAA9H,EAAA+H,cAAC+F,GAAD,MACAhG,EAAA9H,EAAA+H,cAACgG,GAAD,MACAjG,EAAA9H,EAAA+H,cAACiG,EAAA,eAAD,UEzBYC,QACW,cAA7BC,OAAOhL,SAASiL,UAEe,UAA7BD,OAAOhL,SAASiL,UAEhBD,OAAOhL,SAASiL,SAASC,MACvB,2DCbNC,IAASC,OAAOxG,EAAA9H,EAAA+H,cAACwG,GAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f157d21d.chunk.js","sourcesContent":["import findLocationByLatLng from './findLocationByLatLng';\nimport findWeatherbyId from './findWeatherById';\n\nimport findDrone from './findDrone';\n\nexport default {\n  findLocationByLatLng,\n  findWeatherbyId,\n  findDrone\n};\n","import \"isomorphic-fetch\";\n\nconst findLocationByLatLong = async (latitude, longitude) => {\n  const latlon = [latitude, longitude].join(\",\");\n  // Using the create-react-app's proxy for CORS issues\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/weather/location/search/?lattlong=${latlon}`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default findLocationByLatLong;\n","import \"isomorphic-fetch\";\n\nconst findWeatherbyId = async id => {\n  // Using the create-react-app's proxy for CORS issues\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/weather/location/${id}/`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default findWeatherbyId;\n","import 'isomorphic-fetch';\n\n// function that pings api for drone data and returns response as json or an error object\n\nconst findDrone = async () => {\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/drone`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n\n  return json.data;\n};\n\nexport default findDrone;\n","export const FETCH_WEATHER = 'COMMAND/FETCH_WEATHER_FOR_LAT_LNG';\nexport const API_ERROR = 'EVENT/API_ERROR_RECEIVED';\nexport const WEATHER_DATA_RECEIVED = 'EVENT/WEATHER_DATA_RECEIVED';\nexport const WEATHER_ID_RECEIVED = 'EVENT/WEATHER_ID_RECEIVED';\n\nexport const FETCH_DRONE = 'COMMAND/FETCH_DRONE_DATA';\nexport const REFETCH_DRONE = 'COMMAND/REFETCH_DRONE_DATA';\nexport const DRONE_DATA_RECEIVED = 'EVENT/DRONE_DATA_RECEIVED';\n","import { takeEvery, call, put, cancel, all } from 'redux-saga/effects';\nimport API from '../api';\nimport * as actions from '../actions';\n\n/*\n  1. The weather service requires us to make a search by lat/lng to find its\n  weather ID.\n  2. We then use that weather ID to get the weather.\n\n  This process is pretty well defined here with a saga.\n\n  call invokes a method\n  put dispatches an action\n  takeEvery watches actions and executes a function\n\n  Also -- the `*` in function is important; turns it into a \"generator\"\n\n*/\n\nfunction* watchWeatherIdReceived(action) {\n  const { id } = action;\n  const { error, data } = yield call(API.findWeatherbyId, id);\n  if (error) {\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n  yield put({ type: actions.WEATHER_DATA_RECEIVED, data });\n}\n\nfunction* watchFetchWeather(action) {\n  const { latitude, longitude } = action;\n  const { error, data } = yield call(\n    API.findLocationByLatLng,\n    latitude,\n    longitude\n  );\n\n  if (error) {\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n  const location = data[0] ? data[0].woeid : false;\n  if (!location) {\n    yield put({ type: actions.API_ERROR });\n    yield cancel();\n    return;\n  }\n  yield put({ type: actions.WEATHER_ID_RECEIVED, id: location });\n}\n\nfunction* watchAppLoad() {\n  yield all([\n    takeEvery(actions.FETCH_WEATHER, watchFetchWeather),\n    takeEvery(actions.WEATHER_ID_RECEIVED, watchWeatherIdReceived)\n  ]);\n}\n\nexport default [watchAppLoad];\n","import { takeEvery, call } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport { toast } from \"react-toastify\";\n\nfunction* apiErrorReceived(action) {\n  yield call(toast.error, `Error Received: ${action.code}`);\n}\n\nfunction* watchApiError() {\n  yield takeEvery(actions.API_ERROR, apiErrorReceived);\n}\n\nexport default [watchApiError];\n","import { takeEvery, call, put, cancel, all } from 'redux-saga/effects';\nimport API from '../api';\nimport * as actions from '../actions';\n\nfunction* watchFetchDrone(action) {\n  const data = yield call(API.findDrone);\n  const { error } = yield call(API.findDrone);\n  if (error) {\n    console.log(error);\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n\n  if (!data) {\n    yield put({ type: actions.API_ERROR });\n    yield cancel();\n    return;\n  }\n\n  yield put({ type: actions.DRONE_DATA_RECEIVED, data });\n}\n\nfunction* watchAppLoadDrone() {\n  yield all([\n    takeEvery(actions.FETCH_DRONE, watchFetchDrone),\n    takeEvery(actions.REFETCH_DRONE, watchFetchDrone)\n  ]);\n}\n\nexport default [watchAppLoadDrone];\n","import WeatherSagas from './Weather';\nimport ApiErrors from './ApiErrors';\n\nimport DroneSagas from './Drone';\n\nexport default [...ApiErrors, ...WeatherSagas, ...DroneSagas];\n","import * as actions from '../actions';\n\nconst initialState = {\n  loading: false,\n  weatherId: null,\n  name: '',\n  temperature: '',\n  weather_state_name: '',\n  latitude: null,\n  longitude: null,\n  data: {}\n};\n\nconst toF = c => (c * 9) / 5 + 32;\n\nconst startLoading = (state, action) => {\n  return { ...state, loading: true };\n};\n\nconst weatherIDReceived = (state, action) => {\n  return { ...state, weatherId: action.id };\n};\n\nconst weatherDataRecevied = (state, action) => {\n  const { data } = action;\n  if (!data['consolidated_weather']) return state;\n  const weather = data.consolidated_weather[0];\n  const { weather_state_name, the_temp } = weather;\n  const { latt_long, title: name } = data;\n  const [latitude, longitude] = latt_long.split(',');\n\n  return {\n    ...state,\n    loading: false,\n    latitude,\n    longitude,\n    temperatureinCelsius: the_temp,\n    temperatureinFahrenheit: toF(the_temp),\n    weather_state_name,\n    name,\n    data: action.data\n  };\n};\n\nconst handlers = {\n  [actions.FETCH_WEATHER]: startLoading,\n  [actions.WEATHER_ID_RECEIVED]: weatherIDReceived,\n  [actions.WEATHER_DATA_RECEIVED]: weatherDataRecevied\n};\n\nexport default (state = initialState, action) => {\n  const handler = handlers[action.type];\n  if (typeof handler === 'undefined') return state;\n  return handler(state, action);\n};\n","import * as actions from '../actions';\n\nconst initialState = {\n  loading: false,\n  data: [\n    {\n      timestamp: null,\n      metric: null,\n      latitude: null,\n      longitude: null,\n      uom: '',\n      accuracy: null\n    }\n  ]\n};\n\nconst startLoading = (state, action) => {\n  return {\n    ...state,\n    loading: true\n  };\n};\n\nconst droneDataReceived = (state, action) => {\n  const { data } = action;\n  if (!data) return state;\n\n  return {\n    ...state,\n    data: [...data],\n    loading: false\n  };\n};\n\nconst handlers = {\n  [actions.FETCH_DRONE]: startLoading,\n  [actions.REFETCH_DRONE]: droneDataReceived,\n  [actions.DRONE_DATA_RECEIVED]: droneDataReceived\n};\n\nexport default (state = initialState, action) => {\n  const handler = handlers[action.type];\n  if (typeof handler === 'undefined') return state;\n  return handler(state, action);\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ChipRaw from \"@material-ui/core/Chip\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst cardStyles = theme => ({\n  root: {\n    background: theme.palette.secondary.main\n  },\n  label: {\n    color: theme.palette.primary.main\n  }\n});\nconst Chip = withStyles(cardStyles)(ChipRaw);\n\nclass Weather extends Component {\n  componentDidMount() {\n    this.props.onLoad();\n  }\n  render() {\n    const {\n      loading,\n      name,\n      weather_state_name,\n      temperatureinFahrenheit\n    } = this.props;\n    if (loading) return <LinearProgress />;\n    return (\n      <Chip\n        label={`Weather in ${name}: ${weather_state_name} and ${temperatureinFahrenheit}°`}\n      />\n    );\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const {\n    loading,\n    name,\n    weather_state_name,\n    temperatureinFahrenheit\n  } = state.weather;\n  return {\n    loading,\n    name,\n    weather_state_name,\n    temperatureinFahrenheit\n  };\n};\n\nconst mapDispatch = dispatch => ({\n  onLoad: () =>\n    dispatch({\n      type: actions.FETCH_WEATHER,\n      longitude: -95.3698,\n      latitude: 29.7604\n    })\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Weather);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Weather from \"./Weather\";\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  }\n};\n\nconst Header = props => {\n  const { classes } = props;\n\n  const name = \"samad's\";\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          {name} EOG React Visualization Assessment\n        </Typography>\n        <Weather />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  wrapper: {\n    background: theme.palette.background.main,\n    height: \"100vh\"\n  }\n});\n\nconst Wrapper = props => {\n  const { classes } = props;\n  return <div className={classes.wrapper}>{props.children}</div>;\n};\n\nexport default withStyles(styles)(Wrapper);\n","import React from 'react';\nimport Plot from 'react-plotly.js';\n// use moment library to simplify unix/epoch time conversion\nimport moment from 'moment';\n\nconst Chart = props => {\n  const { plotData } = props;\n\n  const xvals = plotData.map(point => {\n    return moment(point.timestamp).format('HH:mm:ss');\n  });\n  const yvals = plotData.map(point => {\n    return point.metric;\n  });\n  const trace = {\n    x: xvals,\n    y: yvals,\n    mode: 'lines',\n    connectgaps: true\n  };\n\n  const layout = {\n    title: 'Drone Temperature',\n    xaxis: {\n      title: 'Time'\n    },\n    yaxis: {\n      title: 'Temperature (F)'\n    },\n    autosize: true\n  };\n\n  return (\n    <React.Fragment>\n      <Plot\n        data={[trace]}\n        layout={layout}\n        style={{ width: '100%', height: '100%' }}\n        useResizeHandler={true}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\n\nimport {\n  GoogleMap,\n  Marker,\n  withGoogleMap,\n  withScriptjs\n} from 'react-google-maps';\n\nconst Map = withScriptjs(\n  withGoogleMap(props => {\n    return (\n      <GoogleMap\n        defaultZoom={5}\n        defaultCenter={{ lat: 29.7604, lng: -95.3698 }}\n      >\n        {props.isMarkerShown && (\n          <Marker\n            position={{\n              lat: props.mapData[0].latitude,\n              lng: props.mapData[0].longitude\n            }}\n          />\n        )}\n      </GoogleMap>\n    );\n  })\n);\n\nexport default Map;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions';\nimport Card from '@material-ui/core/Card';\nimport CardHeaderRaw from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Chart from './Chart';\nimport Map from './Map';\n\n// this file was set up as a container for the chart and the map components for the assessment\n\n// utilizing styles/theme provided in the now what component / overall project\nconst cardStyles = theme => ({\n  root: {\n    background: theme.palette.primary.main\n  },\n  title: {\n    color: 'white'\n  }\n});\nconst CardHeader = withStyles(cardStyles)(CardHeaderRaw);\nconst styles = {\n  card: {\n    margin: '3.5% 10%'\n  }\n};\n\nclass Dashboard extends Component {\n  // dispatch actions to ping api on component load and on a 4 second internal per requirements\n  // used separate dispatch actions to not show the loading/linear progress on each mount (keep loading set on false after initial)\n  // -- would appreciate feedback on this method - i'm sure there is a better way\n  componentDidMount() {\n    this.props.onLoad();\n    this.timer = setInterval(() => this.props.onRefetch(), 4000);\n  }\n\n  // clear timer interval to prevent memory leaks\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { loading, data, classes } = this.props;\n\n    if (loading) return <LinearProgress />;\n\n    // charting the temperature data isnt very polished :\\\n    return (\n      <React.Fragment>\n        <Card className={classes.card}>\n          <CardHeader title=\"Drone Location Map\" />\n          <CardContent>\n            <Map\n              isMarkerShown\n              googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${\n                process.env.REACT_APP_MAPS_API_KEY\n              }&v=3.exp&libraries=geometry,drawing,places`}\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `400px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n              mapData={data}\n            />\n          </CardContent>\n        </Card>\n        <Card className={classes.card}>\n          <CardHeader title=\"Recharts Drone Temperature Chart\" />\n          <CardContent>\n            <Chart plotData={data} />\n          </CardContent>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapState = state => {\n  const { loading, data } = state.drone;\n  return {\n    loading,\n    data: [...data]\n  };\n};\n\nconst mapDispatch = dispatch => ({\n  onLoad: () =>\n    dispatch({\n      type: actions.FETCH_DRONE\n    }),\n  onRefetch: () =>\n    dispatch({\n      type: actions.REFETCH_DRONE\n    })\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(withStyles(styles)(Dashboard));\n","import React from 'react';\nimport createStore from './store';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\n\nimport Dashboard from './components/Dashboard';\n\nconst store = createStore();\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: {\n      main: 'rgb(39,49,66)'\n    },\n    secondary: {\n      main: 'rgb(197,208,222)'\n    },\n    background: {\n      main: 'rgb(226,231,238)'\n    }\n  }\n});\n\nconst App = props => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <Provider store={store}>\n      <Wrapper>\n        <Header />\n        <Dashboard />\n        <ToastContainer />\n      </Wrapper>\n    </Provider>\n  </MuiThemeProvider>\n);\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport sagas from './sagas';\nimport weatherReducer from './reducers/Weather';\n\nimport droneReducer from './reducers/Drone';\n\nexport default () => {\n  const rootReducer = combineReducers({\n    weather: weatherReducer,\n    drone: droneReducer\n  });\n\n  const composeEnhancers = composeWithDevTools({});\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = applyMiddleware(sagaMiddleware);\n  const store = createStore(rootReducer, composeEnhancers(middlewares));\n\n  sagas.forEach(sagaMiddleware.run);\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}